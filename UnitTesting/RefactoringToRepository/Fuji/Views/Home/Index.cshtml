@model MainPageVM
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Example of refactoring our typical example of using a DbContext into using the Repository pattern, also using Dependency Injection</p>
</div>

@if (Model.TheIdentityUser != null && Model.TheFujiUser != null)
{
    <div class="row">
        <div class="col">
            <h2>How many Apples have you eaten today @Model.TheFujiUser.FirstName @Model.TheFujiUser.LastName ? </h2>
            <p>Click on each apple to indicate you ate one today</p>
            <div class="list-group" id="listOfApples">
                @foreach (Apple a in Model.Apples)
                {
                    // We'll set up a javascript listener on these buttons to send an AJAX message to our controller
                    var appleID = "a" + a.Id;
                    <button type="button" id="@appleID" class="list-group-item list-group-item-action">@a.VarietyName (@a.ScientificName)</button>
                }
            </div>
            <p id="appleTotals"></p>
            <p>Total Consumed in entire db = @ViewBag.TotalConsumed</p>
        </div>
    </div>
}

@*
    Move our button listeners and ajax code to a separate javascript file that we
    can load on this page only.  Site.js isn't the best location for it since that
    is loaded on every page by default.
*@

@section Scripts {
    <script type="text/javascript" src="~/js/eatApples.js"></script>
}