@model MainPageVM
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Example of refactoring our typical example of using a DbContext into using the Repository pattern, also using Dependency Injection</p>
</div>

@if (Model.TheIdentityUser != null && Model.TheFujiUser != null)
{
    <div class="row">
        <div class="col">
            <h2>How many Apples have you eaten today @Model.TheFujiUser.FirstName @Model.TheFujiUser.LastName ? </h2>
            <p>Click on each apple to indicate you ate one today</p>
            <div class="list-group" id="listOfApples">
                @foreach (Apple a in Model.Apples)
                {
                    // We'll set up a javascript listener on these buttons to send an AJAX message to our controller
                    var appleID = "a" + a.Id;
                    <button type="button" id="@appleID" class="list-group-item list-group-item-action">@a.VarietyName (@a.ScientificName)</button>
                }
            </div>
            <p id="appleTotals"></p>
            <p>Total Consumed in entire db = @ViewBag.TotalConsumed</p>
        </div>
    </div>
}

<div class="row">
    <div class="col">
        <h2>Want to receive our newsletter?</h2>
        <form id="newsletter">
            <div class="form-group">
                <label for="email">Enter your email address:</label>
                <input type="text" class="form-control" id="email" name="email" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <button type="submit" class="btn btn-primary">Subscribe</button>
        </form>
        <div class="alert alert-success" id="subscribe-alert" style="display: none">
            Thank you!  You'll begin receiving our newsletter soon.
            <button type="button" class="close" data-hide="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/js/eatApples.js"></script>
    @*Just putting this here for convenience in the demo*@
    <script type="text/javascript">
        function showNewsletterMessage(data) {
            // If their email is already in the database then we can tell them they're already subscribed
            if (Array.isArray(data) && data.length) {
                console.log(data);
                // finish code here to tell them they're already subscribed
            }
            else {
                // Thank them
                $('#subscribe-alert').show();
            }
        }

        // AJAX call to send email in to subscribe to newletter
        function subscribeNewsletter(event) {
            event.preventDefault();
            $.ajax({
                url: '/API/IsOnMailingList',
                data: { email: document.getElementById("email").value },
                method: 'GET',
                success: showNewsletterMessage
            });
        }

        // helper to dismiss the bootstrap alert http://jsfiddle.net/cQNFL/21/
        $(function () {
            $("[data-hide]").on("click", function () {
                $("." + $(this).attr("data-hide")).hide();
            });
        });

        document.getElementById('newsletter').addEventListener('submit', subscribeNewsletter);
    </script>
}